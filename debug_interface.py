#!/usr/bin/env python3
"""
Debug da Interface - Verificar se o bot√£o est√° vis√≠vel
"""

import sys
import os
import tkinter as tk
from tkinter import ttk

# Adicionar o diret√≥rio atual ao path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def debug_interface():
    """Debug da interface para verificar o bot√£o"""
    try:
        from gui_launcher import AONAutomationGUI
        
        print("üîç DEBUG DA INTERFACE - VERIFICA√á√ÉO DO BOT√ÉO")
        print("=" * 60)
        
        # Criar interface
        app = AONAutomationGUI()
        
        # Informa√ß√µes sobre o bot√£o
        print(f"\nüìã INFORMA√á√ïES DO BOT√ÉO:")
        print(f"   Existe: {'Sim' if hasattr(app, 'execute_btn') else 'N√£o'}")
        
        if hasattr(app, 'execute_btn'):
            btn = app.execute_btn
            print(f"   Texto: {btn['text']}")
            print(f"   Estado: {btn['state']}")
            print(f"   Classe: {btn.__class__.__name__}")
            
            # Verificar se est√° empacotado
            pack_info = btn.pack_info()
            print(f"   Pack Info: {pack_info}")
            
            # Verificar geometria
            try:
                print(f"   Posi√ß√£o X: {btn.winfo_x()}")
                print(f"   Posi√ß√£o Y: {btn.winfo_y()}")
                print(f"   Largura: {btn.winfo_width()}")
                print(f"   Altura: {btn.winfo_height()}")
                print(f"   Vis√≠vel: {'Sim' if btn.winfo_viewable() else 'N√£o'}")
            except:
                print("   Geometria: N√£o dispon√≠vel (janela n√£o renderizada)")
        
        # Informa√ß√µes sobre a janela
        print(f"\nü™ü INFORMA√á√ïES DA JANELA:")
        print(f"   Tamanho: {app.root.geometry()}")
        print(f"   T√≠tulo: {app.root.title()}")
        
        # Preencher credenciais para testar
        print(f"\nüîê TESTANDO COM CREDENCIAIS:")
        app.username_var.set("A0868855")
        app.password_var.set("teste123")
        
        # For√ßar atualiza√ß√£o
        app.root.update()
        
        print(f"   Usu√°rio: {app.username_var.get()}")
        print(f"   Senha: {'***' if app.password_var.get() else 'vazia'}")
        print(f"   Texto do bot√£o: {app.execute_btn['text']}")
        print(f"   Estado do bot√£o: {app.execute_btn['state']}")
        
        # Mostrar a interface por 3 segundos para visualizar
        print(f"\nüëÅÔ∏è MOSTRANDO INTERFACE POR 3 SEGUNDOS...")
        app.root.after(3000, app.root.quit)  # Fechar ap√≥s 3 segundos
        app.run()
        
        print(f"\n‚úÖ DEBUG CONCLU√çDO!")
        
    except Exception as e:
        print(f"‚ùå Erro no debug: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_interface()